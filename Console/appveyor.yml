version: 1.0.0.{build}
skip_tags: true
max_jobs: 1
image: Ubuntu
configuration: Release
platform: Any CPU
force_https_clone: true
assembly_info:
  patch: true
  file: '**\AssemblyInfo.*'
  assembly_version: '{version}'
  assembly_file_version: '{version}'
  assembly_informational_version: '{version}'
dotnet_csproj:
  patch: true
  file: '**\*.csproj'
  version: '{version}'
  package_version: '{version}'
  assembly_version: '{version}'
  file_version: '{version}'
  informational_version: '{version}'
environment:
  APP_NAME: nano.template.console
  APP_VERSION: $(APPVEYOR_BUILD_VERSION)
  SERVICE_NAME: nano-template-console
  AZURE_USERNAME: xxxxxxxxxx
  AZURE_PASSWORD: 
    secure: xxxxxxxxxx
  AZURE_GROUP: kubernetes
  NUGET_HOST: https://www.nuget.org
  NUGET_APIKEY: 
    secure: xxxxxxxxxx
  NUGET_USERNAME: xxxxxxxxxx
  NUGET_PASSWORD: 
    secure: xxxxxxxxxx
  DOTNET_SDK_VERSION: 7.0.203-jammy
  DOTNET_ASPNET_VERSION: 7.0.5-jammy
for:
  - branches:
      only:
        - master
    environment:
      ENVIRONMENT: Production
      AZURE_SUBSCRIPTION: xxxxxxxxxx
      DOCKER_REGISTRY: xxxxxxxxxx
      DOCKER_USERNAME: xxxxxxxxxx
      DOCKER_PASSWORD:
        secure: xxxxxxxxxx
      KUBERNETES_CLUSTER: staging-cluster
      KUBERNETES_NAMESPACE: default
      KUBERNETES_REPLICA_COUNT: 1
      KUBERNETES_REPLICA_HISTORY_COUNT: 4
      KUBERNETES_CPU_REQUEST: 100m
      KUBERNETES_CPU_LIMIT: 500m
      KUBERNETES_MEMORY_REQUEST: 512Mi   
      KUBERNETES_MEMORY_LIMIT: 1024Mi
      NANO_AUTH_ADMIN_PASSWORD: 
        secure: xxxxxxxxxx
      NANO_AUTH_JWT_SECRET_KEY: 
        secure: xxxxxxxxxx
      DATA_CONNECTIONSTRING: 
        secure: xxxxxxxxxx
      EVENTING_USERNAME: rabbitmq_user
      EVENTING_PASSWORD:
        secure: xxxxxxxxxx
  - branches:
      except:
        - master
    environment:
      ENVIRONMENT: Staging
      AZURE_SUBSCRIPTION: xxxxxxxxxx
      DOCKER_REGISTRY: xxxxxxxxxx
      DOCKER_USERNAME: xxxxxxxxxx
      DOCKER_PASSWORD:
        secure: xxxxxxxxxx
      KUBERNETES_CLUSTER: staging-cluster
      KUBERNETES_NAMESPACE: default
      KUBERNETES_REPLICA_COUNT: 1
      KUBERNETES_REPLICA_HISTORY_COUNT: 4
      KUBERNETES_CPU_REQUEST: 100m
      KUBERNETES_CPU_LIMIT: 500m
      KUBERNETES_MEMORY_REQUEST: 512Mi   
      KUBERNETES_MEMORY_LIMIT: 1024Mi
      NANO_AUTH_ADMIN_PASSWORD: 
        secure: xxxxxxxxxx
      NANO_AUTH_JWT_SECRET_KEY: 
        secure: xxxxxxxxxx
      DATA_CONNECTIONSTRING: 
        secure: xxxxxxxxxx
      EVENTING_USERNAME: rabbitmq_user
      EVENTING_PASSWORD:
        secure: xxxxxxxxxx
nuget:
  account_feed: false
  project_feed: false
services:
  - docker
build_script: 
- ps: >-
    # Build and push docker container.
    docker build -t $env:DOCKER_REGISTRY"/"$env:APP_NAME":latest" -t $env:DOCKER_REGISTRY"/"$env:APP_NAME":"$env:APP_VERSION --quiet --build-arg VERSION=$env:APP_VERSION --build-arg DOTNET_SDK_VERSION=$env:DOTNET_SDK_VERSION --build-arg DOTNET_ASPNET_VERSION=$env:DOTNET_ASPNET_VERSION --build-arg NUGET_HOST=$env:NUGET_HOST --build-arg NUGET_APIKEY=$env:NUGET_APIKEY --build-arg NUGET_USERNAME=$env:NUGET_USERNAME --build-arg NUGET_PASSWORD=$env:NUGET_PASSWORD ./ ;
    if ($LastExitCode -ne 0) 
    { 
        return $LastExitCode;
    };
    docker login -u="$env:DOCKER_USERNAME" -p="$env:DOCKER_PASSWORD" $env:DOCKER_REGISTRY;
    docker tag $env:APP_NAME":latest" $env:DOCKER_REGISTRY"/"$env:APP_NAME":"$env:APP_VERSION;
    docker push $env:DOCKER_REGISTRY"/"$env:APP_NAME":"$env:APP_VERSION;

    # Azure AKS authentication and client installation. 
    sudo az login -u $env:AZURE_USERNAME -p $env:AZURE_PASSWORD;
    sudo az account set -s $env:AZURE_SUBSCRIPTION;
    sudo az aks get-credentials -g $env:AZURE_GROUP -n $env:KUBERNETES_CLUSTER;
    sudo az aks install-cli;

    # Replace environment variables in kubernetes templates, and apply changes to the cluster. 
    Get-Content .kubernetes/configmap.yaml | foreach { [Environment]::ExpandEnvironmentVariables($_) } | Set-Content .kubernetes/configmap.tmp.yaml;
    Get-Content .kubernetes/cronjob.yaml | foreach { [Environment]::ExpandEnvironmentVariables($_) } | Set-Content .kubernetes/cronjob.tmp.yaml;

    sudo chown -R appveyor:appveyor $env:HOME/.kube;

    kubectl apply -f .kubernetes/configmap.tmp.yaml;
    kubectl apply -f .kubernetes/cronjob.tmp.yaml;
deploy:
- provider: GitHub
  tag: $(APP_VERSION)
  auth_token:
    secure: xxxxxxxxxx
  on:
    branch: master