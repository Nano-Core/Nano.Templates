apiVersion: batch/v1
kind: CronJob
metadata:
  name: %SERVICE_NAME%
spec:
  schedule: "0 * * * *"
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: %KUBERNETES_REPLICA_HISTORY_COUNT%
  successfulJobsHistoryLimit: %KUBERNETES_REPLICA_HISTORY_COUNT%
  jobTemplate:
    metadata:
      labels:
        app: %SERVICE_NAME%
    spec:
      template:
        spec:
          automountServiceAccountToken: false
          securityContext:
            runAsUser: 1000
            runAsGroup: 2000 
          automountServiceAccountToken: false
          nodeSelector:
            nodepool.compute: %KUBERNETES_NODEPOOL_COMPUTE%
            kubernetes.io/os: linux
          containers:
          - name: %SERVICE_NAME%
            image: %AZURE_ACR_HOST%/%IMAGE_NAME%:%VERSION%
            imagePullPolicy: Always 

            env:
            - name: Eventing__Password
              valueFrom:
                secretKeyRef:
                  name: rabbitmq
                  key: rabbitmq-password
            envFrom:
            - configMapRef:
                name: %SERVICE_NAME%-config
            resources:
              requests:
                memory: %KUBERNETES_MEMORY_REQUEST%
                cpu: %KUBERNETES_CPU_REQUEST%
              limits:
                memory: %KUBERNETES_MEMORY_LIMIT%
                cpu: %KUBERNETES_CPU_LIMIT%
            securityContext:
              privileged: false
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              runAsNonRoot: true
              runAsUser: 1000
              runAsGroup: 2000
              capabilities:
                drop:
                - ALL
            volumeMounts:
            - name: tmp
              mountPath: /tmp
          restartPolicy: OnFailure
          volumes:
          - name: tmp
            emptyDir: {}


